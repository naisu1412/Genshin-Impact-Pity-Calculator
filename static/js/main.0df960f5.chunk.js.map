{"version":3,"sources":["Component/Calculator.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","totalPityRoll","setTotalPityRoll","totalPrimo","setTotalPrimo","totalFate","setTotalFate","currPityCounter","setCurrPity","useEffect","parseInt","className","type","onChange","e","target","value","readOnly","Home","defaultTab","tabFor","tabId","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TA+CeA,MA5Cf,WAAuB,IAAD,EACwBC,mBAAS,GADjC,mBACXC,EADW,KACIC,EADJ,OAEkBF,mBAAS,GAF3B,mBAEXG,EAFW,KAECC,EAFD,OAGgBJ,mBAAS,GAHzB,mBAGXK,EAHW,KAGAC,EAHA,OAIqBN,mBAAS,GAJ9B,mBAIXO,EAJW,KAIMC,EAJN,KAWlB,OALAC,qBAAU,WAENP,EAAiBQ,UADOP,EAAa,MAAUE,IAAeE,OAK9D,sBAAKI,UAAU,aAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,iCAAf,wBACe,uBAAOA,UAAU,sBAAsBC,KAAK,SAASC,SAAU,SAAAC,GACtEV,EAAcU,EAAEC,OAAOC,aAI/B,sBAAKL,UAAU,iCAAf,mBACU,uBAAOA,UAAU,sBAAsBC,KAAK,SAASC,SAAU,SAAAC,GAAC,OAAIR,EAAaQ,EAAEC,OAAOC,aAGpG,sBAAKL,UAAU,iCAAf,2BACkB,uBAAOA,UAAU,sBAAsBC,KAAK,SAASC,SAAU,SAAAC,GACzEN,EAAYM,EAAEC,OAAOC,gBAKjC,qBAAKL,UAAU,wBAAf,SAEI,sBAAKA,UAAU,iCAAf,+BACsB,uBAAOM,UAAQ,EAACN,UAAU,sBAAsBC,KAAK,OAAOI,MAAOf,aCX1FiB,MArBf,WACI,OACI,qBAAKP,UAAU,OAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,eAAC,IAAD,CAAMQ,WAAW,gBAAgBR,UAAU,YAA3C,UACI,cAAC,IAAD,CAASA,UAAU,0CAAnB,SACI,cAAC,IAAD,CAAKS,OAAO,gBAAgBT,UAAU,0CAAtC,0BAEJ,cAAC,IAAD,CAAUU,MAAM,gBAAgBV,UAAU,4CAA1C,SACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,gBCKbW,MAff,WACE,OACE,cAAC,IAAD,UACE,qBAAKX,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOY,KAAK,IAAZ,SACE,cAAC,EAAD,aCCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0df960f5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Calculator.css\";\r\n\r\nfunction Calculator() {\r\n    const [totalPityRoll, setTotalPityRoll] = useState(0);\r\n    const [totalPrimo, setTotalPrimo] = useState(0);\r\n    const [totalFate, setTotalFate] = useState(0);\r\n    const [currPityCounter, setCurrPity] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let totalPityCount = (+(totalPrimo / 160)) + (+totalFate) + (+currPityCounter);\r\n        setTotalPityRoll(parseInt(totalPityCount));\r\n    })\r\n\r\n    return (\r\n        <div className=\"Calculator\">\r\n            <div className=\"Calculator__Container\">\r\n                <div className=\"Calculator__Container__Content\">\r\n                    Primogems: <input className=\"header__searchInput\" type=\"number\" onChange={e => {\r\n                        setTotalPrimo(e.target.value)\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"Calculator__Container__Content\">\r\n                    Fate: <input className=\"header__searchInput\" type=\"number\" onChange={e => setTotalFate(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"Calculator__Container__Content\">\r\n                    Current Pity: <input className=\"header__searchInput\" type=\"number\" onChange={e => {\r\n                        setCurrPity(e.target.value)\r\n                    }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"Calculator__Container\">\r\n\r\n                <div className=\"Calculator__Container__Content\">\r\n                    Total Pity/Rolls: <input readOnly className=\"header__searchInput\" type=\"text\" value={totalPityRoll} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Tabs, Tab, TabPanel, TabList } from 'react-web-tabs'\r\nimport Calculator from \"./../Component/Calculator\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__container\">\r\n                <Tabs defaultTab=\"basic-tab-one\" className=\"rwt__tabs\">\r\n                    <TabList className=\"rwt__tablist home__container__tabHeader\" >\r\n                        <Tab tabFor=\"basic-tab-one\" className=\"home__container__calculatorTab rwt__tab\">Calculator</Tab>\r\n                    </TabList>\r\n                    <TabPanel tabId=\"basic-tab-one\" className=\"home__container__calculator rwt__tabpanel\">\r\n                        <div className=\"home__container__panel\">\r\n                            <Calculator />\r\n                        </div>\r\n                    </TabPanel>\r\n                    \r\n\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}